CREATE TABLE users (
 user_id INT PRIMARY KEY,
 username VARCHAR(255) NOT NULL,
 email VARCHAR(50) NOT NULL UNIQUE,
 password VARCHAR(255) NOT NULL,
 role ENUM('student', 'mentor') NOT NULL,
 createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
 updated_at DATETIME DEFAULT NULL
);

CREATE TABLE students (
 student_id INT PRIMARY KEY,
 user_id INT NOT NULL,
 full_name VARCHAR(255) NOT NULL,
 address TEXT NOT NULL,
 phone_number VARCHAR(20) NOT NULL,
 qualification TEXT NOT NULL,
 work_experience TEXT NOT NULL,
 FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE mentors (
 mentor_id INT PRIMARY KEY,
 user_id INT NOT NULL,
 full_name VARCHAR(255) NOT NULL,
 address TEXT NOT NULL,
 phone_number VARCHAR(20) NOT NULL,
 qualification TEXT NOT NULL,
 work_experience TEXT NOT NULL,
 FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE topics (
 topic_id INT PRIMARY KEY,
 topic_name VARCHAR(255),
 description TEXT,
 num_sessions INT,
 mentor_id INT,
 FOREIGN KEY (mentor_id) REFERENCES mentors(mentor_id)
);

CREATE TABLE tasks (
 task_id INT PRIMARY KEY,
 topic_id INT,
 task_name VARCHAR(255),
 description TEXT NOT NULL,
 deadline DATE,
 FOREIGN KEY (topic_id) REFERENCES topics(topic_id)
);

CREATE TABLE attendance (
 attendance_id INT PRIMARY KEY,
 user_id INT NOT NULL,
 topic_id INT NOT NULL,
 session_date DATE,
 status ENUM('present', 'absent') NOT NULL,
 FOREIGN KEY (user_id) REFERENCES users(user_id),
 FOREIGN KEY (topic_id) REFERENCES topics(topic_id) );
 
 CREATE TABLE capstones (
 capstone_id INT PRIMARY KEY,
 user_id INT NOT NULL,
 project_name VARCHAR(255),
 description TEXT,
 FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE queries (
 query_id INT PRIMARY KEY,
 student_id INT,
 mentor_id INT,
 topic_id INT,
 question VARCHAR(255) NOT NULL,
 answer TEXT,
 FOREIGN KEY (student_id) REFERENCES students(student_id),
 FOREIGN KEY (mentor_id) REFERENCES mentors(mentor_id),
 FOREIGN KEY (topic_id) REFERENCES topics(topic_id)
);

CREATE TABLE portfolio_submissions (
 submission_id INT PRIMARY KEY,
 student_id INT,
 capstone_id INT,
 submission_date DATE,
 github_url VARCHAR(255),
 portfolio_url VARCHAR(255),
 resume_url VARCHAR(255),
 FOREIGN KEY (student_id) REFERENCES students(student_id),
 FOREIGN KEY (capstone_id) REFERENCES capstones(capstone_id)
);
